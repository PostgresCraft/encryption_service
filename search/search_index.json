{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Encryption Service","text":"<p>\ud83d\udcd8 Live Documentation</p> <p> </p> <p>A lightweight Python-based encryption and decryption tool built with the <code>cryptography</code> library. Secure your sensitive data with ease through symmetric encryption, and manage your keys efficiently.</p>"},{"location":"#features","title":"Features","text":"<ul> <li>\ud83d\udd10 AES encryption and decryption (Fernet \u2013 symmetric key)</li> <li>\ud83d\udd11 Key generation, saving, and loading</li> <li>\ud83e\uddf0 Easy CLI interface (coming soon)</li> <li>\u2699\ufe0f Ready for integration with PostgreSQL, APIs, or services</li> <li>\ud83d\udcbb Cross-platform (Windows, macOS, Linux)</li> </ul> <p>\ud83d\udd1d Back to Top</p>"},{"location":"#clone-the-repository","title":"Clone the Repository","text":"<p>To get started, clone this repository to your local machine using Git:</p> <pre><code>git clone https://github.com/PostgresCraft/encryption_service.git\ncd encryption_service\n</code></pre> <ul> <li>Make sure you have Git installed: https://git-scm.com</li> </ul> <p> </p> <p>\ud83d\udcfd\ufe0f Quick Clone of the Encryption Service Tools in action  </p> <p>\ud83d\udd1d Back to Top</p>"},{"location":"#quick-start","title":"Quick Start","text":""},{"location":"#1-create-virtual-environment","title":"1. Create Virtual Environment","text":"<pre><code># Windows\npy -3.12 -m venv venv\n.\\env\\Scripts\\Activate\n</code></pre> <p>\ud83d\udcfd\ufe0f Quick Windows of the Encryption Service Tools in action</p> <p>\ud83d\udd1d Back to Top</p> <pre><code># macOS / Linux\npython3 -m venv venv\nsource venv/bin/activate\n</code></pre>"},{"location":"#optional-upgrade-pip-recommended","title":"Optional: Upgrade pip (recommended)","text":"<p>Before installing dependencies, it's recommended to upgrade <code>pip</code> to the latest version to avoid compatibility issues.</p> <pre><code>python -m pip install --upgrade pip\n</code></pre> <p> </p> <p>\ud83d\udcfd\ufe0f Upgrading pip on Windows (recommended)</p> <p>\ud83d\udd1d Back to Top</p>"},{"location":"#install-dependencies","title":"Install Dependencies","text":"<pre><code>pip install -r requirements.txt\n</code></pre> <p>\ud83d\udcfd\ufe0f Quick install of the Encryption Service Tools in action</p> <p>\ud83d\udd1d Back to Top</p>"},{"location":"#project-structure","title":"Project Structure","text":"<p>The following is the current structure of the project files:</p> <p> </p> <p>\ud83d\udcf8 Project file structure overview</p> \ud83d\udcc4 Click to view the text version <pre><code>encryption_service/\n\u251c\u2500\u2500 encryption.py           # Core encryption/decryption logic\n\u251c\u2500\u2500 keys_manager.py         # Key generation and key handling\n\u251c\u2500\u2500 requirements.txt        # List of dependencies\n\u2514\u2500\u2500 README.md               # Project documentation\n</code></pre> <p>\ud83d\udd1d Back to Top</p>"},{"location":"#integration-guide","title":"\ud83e\uddea Integration Guide","text":"<p>Want to use <code>encryption_service</code> inside other projects? Here's how to integrate it in 3 simple steps...</p> <ol> <li>Import <code>keys_manager</code> and <code>encryption</code> from the module.</li> <li>Load or generate your encryption key.</li> <li>Use <code>encrypt()</code> and <code>decrypt()</code> wherever needed in your project.</li> </ol> <p>\u2705 Ready for PostgreSQL, APIs, Flask projects and more.</p> <p>\ud83d\udd1d Back to Top</p>"},{"location":"#brute-force-simulation-why-fernet-is-secure","title":"Brute-Force Simulation \u2014 Why Fernet is Secure","text":"<p>The script <code>brute_force_simulation.py</code> demonstrates the strength of Fernet encryption by attempting to decrypt a message using 100,000+ random keys.</p> <p>As expected, none succeed \u2014 showcasing the impracticality of brute-force attacks.</p> <p>Fernet uses 256-bit symmetric keys. That means 2^256 possible keys, which is more than the number of atoms in the universe. Brute-forcing such a key is computationally unfeasible.</p>"},{"location":"#run-the-simulation","title":"\u25b6\ufe0f Run the simulation:","text":"<pre><code>py tests\\brute_force_simulation.py\n</code></pre> <p>\ud83d\udcfd\ufe0f It reinforces why using strong encryption like Fernet is essential.</p> <p>\ud83d\udd1d Back to Top</p>"},{"location":"#license","title":"License","text":"<p>This project is licensed under the MIT License. See the LICENSE file for details.</p> <p>\ud83d\udd1d Back to Top</p>"},{"location":"#author","title":"Author","text":"<p>Tamer Hamad Faour GitHub: @TamerOnLine</p> <p>\ud83d\udd1d Back to Top</p>"}]}